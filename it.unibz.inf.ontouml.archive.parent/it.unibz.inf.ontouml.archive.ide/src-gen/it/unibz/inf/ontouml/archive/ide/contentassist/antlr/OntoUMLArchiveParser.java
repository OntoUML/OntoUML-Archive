/*
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.ontouml.archive.ide.contentassist.antlr;

import com.google.inject.Inject;
import it.unibz.inf.ontouml.archive.ide.contentassist.antlr.internal.InternalOntoUMLArchiveParser;
import it.unibz.inf.ontouml.archive.services.OntoUMLArchiveGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class OntoUMLArchiveParser extends AbstractContentAssistParser {

	@Inject
	private OntoUMLArchiveGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalOntoUMLArchiveParser createParser() {
		InternalOntoUMLArchiveParser result = new InternalOntoUMLArchiveParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelElementAccess().getAlternatives_0(), "rule__ModelElement__Alternatives_0");
					put(grammarAccess.getRelationshipAccess().getAlternatives(), "rule__Relationship__Alternatives");
					put(grammarAccess.getAssociationAccess().getAlternatives(), "rule__Association__Alternatives");
					put(grammarAccess.getCARDINALITYAccess().getAlternatives(), "rule__CARDINALITY__Alternatives");
					put(grammarAccess.getAggregationKindAccess().getAlternatives(), "rule__AggregationKind__Alternatives");
					put(grammarAccess.getAggregationKindDeclarationAccess().getAlternatives(), "rule__AggregationKindDeclaration__Alternatives");
					put(grammarAccess.getModelElementAccess().getGroup(), "rule__ModelElement__Group__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getBinaryAssociationAccess().getGroup(), "rule__BinaryAssociation__Group__0");
					put(grammarAccess.getNaryAssociationAccess().getGroup(), "rule__NaryAssociation__Group__0");
					put(grammarAccess.getNaryAssociationAccess().getGroup_3(), "rule__NaryAssociation__Group_3__0");
					put(grammarAccess.getNaryAssociationAccess().getGroup_4(), "rule__NaryAssociation__Group_4__0");
					put(grammarAccess.getNaryAssociationAccess().getGroup_5(), "rule__NaryAssociation__Group_5__0");
					put(grammarAccess.getAssociationEndAccess().getGroup(), "rule__AssociationEnd__Group__0");
					put(grammarAccess.getAssociationEndAccess().getGroup_5(), "rule__AssociationEnd__Group_5__0");
					put(grammarAccess.getAssociationEndAccess().getGroup_5_2(), "rule__AssociationEnd__Group_5_2__0");
					put(grammarAccess.getMultiplicityAccess().getGroup(), "rule__Multiplicity__Group__0");
					put(grammarAccess.getGeneralizationAccess().getGroup(), "rule__Generalization__Group__0");
					put(grammarAccess.getDependencyLinkAccess().getGroup(), "rule__DependencyLink__Group__0");
					put(grammarAccess.getDerivationAccess().getGroup(), "rule__Derivation__Group__0");
					put(grammarAccess.getClassDerivationEndAccess().getGroup(), "rule__ClassDerivationEnd__Group__0");
					put(grammarAccess.getClassDerivationEndAccess().getGroup_2(), "rule__ClassDerivationEnd__Group_2__0");
					put(grammarAccess.getClassDerivationEndAccess().getGroup_2_2(), "rule__ClassDerivationEnd__Group_2_2__0");
					put(grammarAccess.getRelationDerivationEndAccess().getGroup(), "rule__RelationDerivationEnd__Group__0");
					put(grammarAccess.getRelationDerivationEndAccess().getGroup_2(), "rule__RelationDerivationEnd__Group_2__0");
					put(grammarAccess.getRelationDerivationEndAccess().getGroup_2_2(), "rule__RelationDerivationEnd__Group_2_2__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup(), "rule__GeneralizationSet__Group__0");
					put(grammarAccess.getModelAccess().getElementsAssignment(), "rule__Model__ElementsAssignment");
					put(grammarAccess.getClassAccess().getIsAbstractAssignment_0(), "rule__Class__IsAbstractAssignment_0");
					put(grammarAccess.getClassAccess().getNameAssignment_2(), "rule__Class__NameAssignment_2");
					put(grammarAccess.getClassAccess().getStereotypesAssignment_3(), "rule__Class__StereotypesAssignment_3");
					put(grammarAccess.getClassAccess().getAttributesAssignment_4(), "rule__Class__AttributesAssignment_4");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
					put(grammarAccess.getAttributeAccess().getMultiplicityAssignment_2(), "rule__Attribute__MultiplicityAssignment_2");
					put(grammarAccess.getAttributeAccess().getAttTypeAssignment_4(), "rule__Attribute__AttTypeAssignment_4");
					put(grammarAccess.getBinaryAssociationAccess().getNameAssignment_1(), "rule__BinaryAssociation__NameAssignment_1");
					put(grammarAccess.getBinaryAssociationAccess().getStereotypesAssignment_2(), "rule__BinaryAssociation__StereotypesAssignment_2");
					put(grammarAccess.getBinaryAssociationAccess().getFromAssignment_4(), "rule__BinaryAssociation__FromAssignment_4");
					put(grammarAccess.getBinaryAssociationAccess().getToAssignment_6(), "rule__BinaryAssociation__ToAssignment_6");
					put(grammarAccess.getNaryAssociationAccess().getNameAssignment_1(), "rule__NaryAssociation__NameAssignment_1");
					put(grammarAccess.getNaryAssociationAccess().getStereotypesAssignment_2(), "rule__NaryAssociation__StereotypesAssignment_2");
					put(grammarAccess.getNaryAssociationAccess().getEndsAssignment_3_1(), "rule__NaryAssociation__EndsAssignment_3_1");
					put(grammarAccess.getNaryAssociationAccess().getEndsAssignment_4_1(), "rule__NaryAssociation__EndsAssignment_4_1");
					put(grammarAccess.getNaryAssociationAccess().getEndsAssignment_5_1(), "rule__NaryAssociation__EndsAssignment_5_1");
					put(grammarAccess.getAssociationEndAccess().getAggregationKindAssignment_0(), "rule__AssociationEnd__AggregationKindAssignment_0");
					put(grammarAccess.getAssociationEndAccess().getNameAssignment_1(), "rule__AssociationEnd__NameAssignment_1");
					put(grammarAccess.getAssociationEndAccess().getMultiplicityAssignment_2(), "rule__AssociationEnd__MultiplicityAssignment_2");
					put(grammarAccess.getAssociationEndAccess().getEndTypeAssignment_4(), "rule__AssociationEnd__EndTypeAssignment_4");
					put(grammarAccess.getAssociationEndAccess().getConstraintsAssignment_5_1(), "rule__AssociationEnd__ConstraintsAssignment_5_1");
					put(grammarAccess.getAssociationEndAccess().getConstraintsAssignment_5_2_1(), "rule__AssociationEnd__ConstraintsAssignment_5_2_1");
					put(grammarAccess.getMultiplicityAccess().getLowerAssignment_1(), "rule__Multiplicity__LowerAssignment_1");
					put(grammarAccess.getMultiplicityAccess().getUpperAssignment_3(), "rule__Multiplicity__UpperAssignment_3");
					put(grammarAccess.getGeneralizationAccess().getNameAssignment_1(), "rule__Generalization__NameAssignment_1");
					put(grammarAccess.getGeneralizationAccess().getSuperAssignment_3(), "rule__Generalization__SuperAssignment_3");
					put(grammarAccess.getGeneralizationAccess().getSubAssignment_5(), "rule__Generalization__SubAssignment_5");
					put(grammarAccess.getDependencyLinkAccess().getNameAssignment_1(), "rule__DependencyLink__NameAssignment_1");
					put(grammarAccess.getDependencyLinkAccess().getStereotypesAssignment_2(), "rule__DependencyLink__StereotypesAssignment_2");
					put(grammarAccess.getDependencyLinkAccess().getFromAssignment_4(), "rule__DependencyLink__FromAssignment_4");
					put(grammarAccess.getDependencyLinkAccess().getToAssignment_6(), "rule__DependencyLink__ToAssignment_6");
					put(grammarAccess.getDerivationAccess().getNameAssignment_1(), "rule__Derivation__NameAssignment_1");
					put(grammarAccess.getDerivationAccess().getStereotypesAssignment_2(), "rule__Derivation__StereotypesAssignment_2");
					put(grammarAccess.getDerivationAccess().getClassAssignment_4(), "rule__Derivation__ClassAssignment_4");
					put(grammarAccess.getDerivationAccess().getPartAssignment_6(), "rule__Derivation__PartAssignment_6");
					put(grammarAccess.getClassDerivationEndAccess().getMultiplicityAssignment_0(), "rule__ClassDerivationEnd__MultiplicityAssignment_0");
					put(grammarAccess.getClassDerivationEndAccess().getEndTypeAssignment_1(), "rule__ClassDerivationEnd__EndTypeAssignment_1");
					put(grammarAccess.getClassDerivationEndAccess().getConstraintsAssignment_2_1(), "rule__ClassDerivationEnd__ConstraintsAssignment_2_1");
					put(grammarAccess.getClassDerivationEndAccess().getConstraintsAssignment_2_2_1(), "rule__ClassDerivationEnd__ConstraintsAssignment_2_2_1");
					put(grammarAccess.getRelationDerivationEndAccess().getMultiplicityAssignment_0(), "rule__RelationDerivationEnd__MultiplicityAssignment_0");
					put(grammarAccess.getRelationDerivationEndAccess().getEndTypeAssignment_1(), "rule__RelationDerivationEnd__EndTypeAssignment_1");
					put(grammarAccess.getRelationDerivationEndAccess().getConstraintsAssignment_2_1(), "rule__RelationDerivationEnd__ConstraintsAssignment_2_1");
					put(grammarAccess.getRelationDerivationEndAccess().getConstraintsAssignment_2_2_1(), "rule__RelationDerivationEnd__ConstraintsAssignment_2_2_1");
					put(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_1_0(), "rule__GeneralizationSet__IsDisjointAssignment_1_0");
					put(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_1_1(), "rule__GeneralizationSet__IsCompleteAssignment_1_1");
					put(grammarAccess.getGeneralizationSetAccess().getNameAssignment_2(), "rule__GeneralizationSet__NameAssignment_2");
					put(grammarAccess.getGeneralizationSetAccess().getGeneralizationsAssignment_3(), "rule__GeneralizationSet__GeneralizationsAssignment_3");
					put(grammarAccess.getGeneralizationSetAccess().getUnorderedGroup_1(), "rule__GeneralizationSet__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public OntoUMLArchiveGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(OntoUMLArchiveGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
