/*
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.ontouml.archive.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OntoUMLArchiveGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Model");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsModelElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//Model:
		//	elements+=ModelElement*;
		@Override public ParserRule getRule() { return rule; }
		
		//elements+=ModelElement*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//ModelElement
		public RuleCall getElementsModelElementParserRuleCall_0() { return cElementsModelElementParserRuleCall_0; }
	}
	public class ModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.ModelElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cClassParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cRelationshipParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cGeneralizationSetParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ModelElement:
		//	(Class | Relationship | GeneralizationSet) ';';
		@Override public ParserRule getRule() { return rule; }
		
		//(Class | Relationship | GeneralizationSet) ';'
		public Group getGroup() { return cGroup; }
		
		//Class | Relationship | GeneralizationSet
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//Class
		public RuleCall getClassParserRuleCall_0_0() { return cClassParserRuleCall_0_0; }
		
		//Relationship
		public RuleCall getRelationshipParserRuleCall_0_1() { return cRelationshipParserRuleCall_0_1; }
		
		//GeneralizationSet
		public RuleCall getGeneralizationSetParserRuleCall_0_2() { return cGeneralizationSetParserRuleCall_0_2; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cStereotypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_3_0 = (RuleCall)cStereotypesAssignment_3.eContents().get(0);
		private final Assignment cAttributesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAttributesAttributeParserRuleCall_4_0 = (RuleCall)cAttributesAssignment_4.eContents().get(0);
		
		//Class:
		//	isAbstract?='abstract'? 'class' name=STRING
		//	stereotypes+=STEREOTYPE_STRING*
		//	attributes+=Attribute*;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'class' name=STRING stereotypes+=STEREOTYPE_STRING* attributes+=Attribute*
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//stereotypes+=STEREOTYPE_STRING*
		public Assignment getStereotypesAssignment_3() { return cStereotypesAssignment_3; }
		
		//STEREOTYPE_STRING
		public RuleCall getStereotypesSTEREOTYPE_STRINGTerminalRuleCall_3_0() { return cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_3_0; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_4() { return cAttributesAssignment_4; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_4_0() { return cAttributesAttributeParserRuleCall_4_0; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_2_0 = (RuleCall)cMultiplicityAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAttTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAttTypeClassCrossReference_4_0 = (CrossReference)cAttTypeAssignment_4.eContents().get(0);
		private final RuleCall cAttTypeClassSTRINGTerminalRuleCall_4_0_1 = (RuleCall)cAttTypeClassCrossReference_4_0.eContents().get(1);
		
		//Attribute:
		//	'att' name=STRING multiplicity=Multiplicity ':' attType=[Class|STRING];
		@Override public ParserRule getRule() { return rule; }
		
		//'att' name=STRING multiplicity=Multiplicity ':' attType=[Class|STRING]
		public Group getGroup() { return cGroup; }
		
		//'att'
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//multiplicity=Multiplicity
		public Assignment getMultiplicityAssignment_2() { return cMultiplicityAssignment_2; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_2_0() { return cMultiplicityMultiplicityParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//attType=[Class|STRING]
		public Assignment getAttTypeAssignment_4() { return cAttTypeAssignment_4; }
		
		//[Class|STRING]
		public CrossReference getAttTypeClassCrossReference_4_0() { return cAttTypeClassCrossReference_4_0; }
		
		//STRING
		public RuleCall getAttTypeClassSTRINGTerminalRuleCall_4_0_1() { return cAttTypeClassSTRINGTerminalRuleCall_4_0_1; }
	}
	public class RelationshipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Relationship");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAssociationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGeneralizationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDependencyLinkParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDerivationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Relationship:
		//	Association | Generalization | DependencyLink | Derivation;
		@Override public ParserRule getRule() { return rule; }
		
		//Association | Generalization | DependencyLink | Derivation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Association
		public RuleCall getAssociationParserRuleCall_0() { return cAssociationParserRuleCall_0; }
		
		//Generalization
		public RuleCall getGeneralizationParserRuleCall_1() { return cGeneralizationParserRuleCall_1; }
		
		//DependencyLink
		public RuleCall getDependencyLinkParserRuleCall_2() { return cDependencyLinkParserRuleCall_2; }
		
		//Derivation
		public RuleCall getDerivationParserRuleCall_3() { return cDerivationParserRuleCall_3; }
	}
	public class AssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Association");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBinaryAssociationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNaryAssociationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Association:
		//	BinaryAssociation | NaryAssociation;
		@Override public ParserRule getRule() { return rule; }
		
		//BinaryAssociation | NaryAssociation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BinaryAssociation
		public RuleCall getBinaryAssociationParserRuleCall_0() { return cBinaryAssociationParserRuleCall_0; }
		
		//NaryAssociation
		public RuleCall getNaryAssociationParserRuleCall_1() { return cNaryAssociationParserRuleCall_1; }
	}
	public class BinaryAssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.BinaryAssociation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssociationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cStereotypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0 = (RuleCall)cStereotypesAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFromAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFromAssociationEndParserRuleCall_4_0 = (RuleCall)cFromAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cToAssociationEndParserRuleCall_6_0 = (RuleCall)cToAssignment_6.eContents().get(0);
		
		////BinaryAssociation:
		////	RegularAssociation | ParthoodAssociation
		////;
		//BinaryAssociation:
		//	'association' name=STRING?
		//	stereotypes+=STEREOTYPE_STRING*
		//	'from' from=AssociationEnd
		//	'to' to=AssociationEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//'association' name=STRING? stereotypes+=STEREOTYPE_STRING* 'from' from=AssociationEnd 'to' to=AssociationEnd
		public Group getGroup() { return cGroup; }
		
		//'association'
		public Keyword getAssociationKeyword_0() { return cAssociationKeyword_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//stereotypes+=STEREOTYPE_STRING*
		public Assignment getStereotypesAssignment_2() { return cStereotypesAssignment_2; }
		
		//STEREOTYPE_STRING
		public RuleCall getStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0() { return cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//from=AssociationEnd
		public Assignment getFromAssignment_4() { return cFromAssignment_4; }
		
		//AssociationEnd
		public RuleCall getFromAssociationEndParserRuleCall_4_0() { return cFromAssociationEndParserRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=AssociationEnd
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//AssociationEnd
		public RuleCall getToAssociationEndParserRuleCall_6_0() { return cToAssociationEndParserRuleCall_6_0; }
	}
	public class NaryAssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.NaryAssociation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssociationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cStereotypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0 = (RuleCall)cStereotypesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEndKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEndsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEndsAssociationEndParserRuleCall_3_1_0 = (RuleCall)cEndsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEndKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEndsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEndsAssociationEndParserRuleCall_4_1_0 = (RuleCall)cEndsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEndKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEndsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEndsAssociationEndParserRuleCall_5_1_0 = (RuleCall)cEndsAssignment_5_1.eContents().get(0);
		
		////
		////ParthoodAssociation:
		////	'association' name=STRING?
		////	stereotypes+=STEREOTYPE_STRING*
		////	'whole' whole=AssociationEnd
		////	'part' part=AssociationEnd
		////;
		//NaryAssociation:
		//	'association' name=STRING?
		//	stereotypes+=STEREOTYPE_STRING* ('end' ends+=AssociationEnd) ('end' ends+=AssociationEnd) ('end'
		//	ends+=AssociationEnd)+;
		@Override public ParserRule getRule() { return rule; }
		
		//'association' name=STRING? stereotypes+=STEREOTYPE_STRING* ('end' ends+=AssociationEnd) ('end' ends+=AssociationEnd)
		//('end' ends+=AssociationEnd)+
		public Group getGroup() { return cGroup; }
		
		//'association'
		public Keyword getAssociationKeyword_0() { return cAssociationKeyword_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//stereotypes+=STEREOTYPE_STRING*
		public Assignment getStereotypesAssignment_2() { return cStereotypesAssignment_2; }
		
		//STEREOTYPE_STRING
		public RuleCall getStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0() { return cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0; }
		
		//'end' ends+=AssociationEnd
		public Group getGroup_3() { return cGroup_3; }
		
		//'end'
		public Keyword getEndKeyword_3_0() { return cEndKeyword_3_0; }
		
		//ends+=AssociationEnd
		public Assignment getEndsAssignment_3_1() { return cEndsAssignment_3_1; }
		
		//AssociationEnd
		public RuleCall getEndsAssociationEndParserRuleCall_3_1_0() { return cEndsAssociationEndParserRuleCall_3_1_0; }
		
		//'end' ends+=AssociationEnd
		public Group getGroup_4() { return cGroup_4; }
		
		//'end'
		public Keyword getEndKeyword_4_0() { return cEndKeyword_4_0; }
		
		//ends+=AssociationEnd
		public Assignment getEndsAssignment_4_1() { return cEndsAssignment_4_1; }
		
		//AssociationEnd
		public RuleCall getEndsAssociationEndParserRuleCall_4_1_0() { return cEndsAssociationEndParserRuleCall_4_1_0; }
		
		//('end' ends+=AssociationEnd)+
		public Group getGroup_5() { return cGroup_5; }
		
		//'end'
		public Keyword getEndKeyword_5_0() { return cEndKeyword_5_0; }
		
		//ends+=AssociationEnd
		public Assignment getEndsAssignment_5_1() { return cEndsAssignment_5_1; }
		
		//AssociationEnd
		public RuleCall getEndsAssociationEndParserRuleCall_5_1_0() { return cEndsAssociationEndParserRuleCall_5_1_0; }
	}
	public class AssociationEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.AssociationEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAggregationKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAggregationKindAggregationKindDeclarationEnumRuleCall_0_0 = (RuleCall)cAggregationKindAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cMultiplicityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_2_0 = (RuleCall)cMultiplicityAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEndTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEndTypeClassCrossReference_4_0 = (CrossReference)cEndTypeAssignment_4.eContents().get(0);
		private final RuleCall cEndTypeClassSTRINGTerminalRuleCall_4_0_1 = (RuleCall)cEndTypeClassCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cConstraintsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cConstraintsSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cConstraintsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cConstraintsSTRINGTerminalRuleCall_5_2_1_0 = (RuleCall)cConstraintsAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//AssociationEnd:
		//	aggregationKind=AggregationKindDeclaration?
		//	name=STRING?
		//	multiplicity=Multiplicity
		//	':' endType=[Class|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//aggregationKind=AggregationKindDeclaration? name=STRING? multiplicity=Multiplicity ':' endType=[Class|STRING] ('{'
		//constraints+=STRING (',' constraints+=STRING)* '}')?
		public Group getGroup() { return cGroup; }
		
		//aggregationKind=AggregationKindDeclaration?
		public Assignment getAggregationKindAssignment_0() { return cAggregationKindAssignment_0; }
		
		//AggregationKindDeclaration
		public RuleCall getAggregationKindAggregationKindDeclarationEnumRuleCall_0_0() { return cAggregationKindAggregationKindDeclarationEnumRuleCall_0_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//multiplicity=Multiplicity
		public Assignment getMultiplicityAssignment_2() { return cMultiplicityAssignment_2; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_2_0() { return cMultiplicityMultiplicityParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//endType=[Class|STRING]
		public Assignment getEndTypeAssignment_4() { return cEndTypeAssignment_4; }
		
		//[Class|STRING]
		public CrossReference getEndTypeClassCrossReference_4_0() { return cEndTypeClassCrossReference_4_0; }
		
		//STRING
		public RuleCall getEndTypeClassSTRINGTerminalRuleCall_4_0_1() { return cEndTypeClassSTRINGTerminalRuleCall_4_0_1; }
		
		//('{' constraints+=STRING (',' constraints+=STRING)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }
		
		//constraints+=STRING
		public Assignment getConstraintsAssignment_5_1() { return cConstraintsAssignment_5_1; }
		
		//STRING
		public RuleCall getConstraintsSTRINGTerminalRuleCall_5_1_0() { return cConstraintsSTRINGTerminalRuleCall_5_1_0; }
		
		//(',' constraints+=STRING)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//constraints+=STRING
		public Assignment getConstraintsAssignment_5_2_1() { return cConstraintsAssignment_5_2_1; }
		
		//STRING
		public RuleCall getConstraintsSTRINGTerminalRuleCall_5_2_1_0() { return cConstraintsSTRINGTerminalRuleCall_5_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Multiplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLowerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLowerCARDINALITYParserRuleCall_1_0 = (RuleCall)cLowerAssignment_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUpperAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUpperCARDINALITYParserRuleCall_3_0 = (RuleCall)cUpperAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Multiplicity:
		//	'[' lower=CARDINALITY '..' upper=CARDINALITY ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' lower=CARDINALITY '..' upper=CARDINALITY ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//lower=CARDINALITY
		public Assignment getLowerAssignment_1() { return cLowerAssignment_1; }
		
		//CARDINALITY
		public RuleCall getLowerCARDINALITYParserRuleCall_1_0() { return cLowerCARDINALITYParserRuleCall_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_2() { return cFullStopFullStopKeyword_2; }
		
		//upper=CARDINALITY
		public Assignment getUpperAssignment_3() { return cUpperAssignment_3; }
		
		//CARDINALITY
		public RuleCall getUpperCARDINALITYParserRuleCall_3_0() { return cUpperCARDINALITYParserRuleCall_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class CARDINALITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.CARDINALITY");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CARDINALITY ecore::EInt:
		//	'*' | INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class GeneralizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Generalization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSuperKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSuperAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSuperClassCrossReference_3_0 = (CrossReference)cSuperAssignment_3.eContents().get(0);
		private final RuleCall cSuperClassSTRINGTerminalRuleCall_3_0_1 = (RuleCall)cSuperClassCrossReference_3_0.eContents().get(1);
		private final Keyword cSubKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSubAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSubClassCrossReference_5_0 = (CrossReference)cSubAssignment_5.eContents().get(0);
		private final RuleCall cSubClassSTRINGTerminalRuleCall_5_0_1 = (RuleCall)cSubClassCrossReference_5_0.eContents().get(1);
		
		//Generalization:
		//	'gen' name=STRING?
		//	'super' super=[Class|STRING]
		//	'sub' sub=[Class|STRING];
		@Override public ParserRule getRule() { return rule; }
		
		//'gen' name=STRING? 'super' super=[Class|STRING] 'sub' sub=[Class|STRING]
		public Group getGroup() { return cGroup; }
		
		//'gen'
		public Keyword getGenKeyword_0() { return cGenKeyword_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'super'
		public Keyword getSuperKeyword_2() { return cSuperKeyword_2; }
		
		//super=[Class|STRING]
		public Assignment getSuperAssignment_3() { return cSuperAssignment_3; }
		
		//[Class|STRING]
		public CrossReference getSuperClassCrossReference_3_0() { return cSuperClassCrossReference_3_0; }
		
		//STRING
		public RuleCall getSuperClassSTRINGTerminalRuleCall_3_0_1() { return cSuperClassSTRINGTerminalRuleCall_3_0_1; }
		
		//'sub'
		public Keyword getSubKeyword_4() { return cSubKeyword_4; }
		
		//sub=[Class|STRING]
		public Assignment getSubAssignment_5() { return cSubAssignment_5; }
		
		//[Class|STRING]
		public CrossReference getSubClassCrossReference_5_0() { return cSubClassCrossReference_5_0; }
		
		//STRING
		public RuleCall getSubClassSTRINGTerminalRuleCall_5_0_1() { return cSubClassSTRINGTerminalRuleCall_5_0_1; }
	}
	public class DependencyLinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.DependencyLink");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDependencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cStereotypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0 = (RuleCall)cStereotypesAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFromAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cFromClassCrossReference_4_0 = (CrossReference)cFromAssignment_4.eContents().get(0);
		private final RuleCall cFromClassSTRINGTerminalRuleCall_4_0_1 = (RuleCall)cFromClassCrossReference_4_0.eContents().get(1);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cToClassCrossReference_6_0 = (CrossReference)cToAssignment_6.eContents().get(0);
		private final RuleCall cToClassSTRINGTerminalRuleCall_6_0_1 = (RuleCall)cToClassCrossReference_6_0.eContents().get(1);
		
		//DependencyLink:
		//	'dependency' name=STRING?
		//	stereotypes+=STEREOTYPE_STRING*
		//	'from' from=[Class|STRING]
		//	'to' to=[Class|STRING];
		@Override public ParserRule getRule() { return rule; }
		
		//'dependency' name=STRING? stereotypes+=STEREOTYPE_STRING* 'from' from=[Class|STRING] 'to' to=[Class|STRING]
		public Group getGroup() { return cGroup; }
		
		//'dependency'
		public Keyword getDependencyKeyword_0() { return cDependencyKeyword_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//stereotypes+=STEREOTYPE_STRING*
		public Assignment getStereotypesAssignment_2() { return cStereotypesAssignment_2; }
		
		//STEREOTYPE_STRING
		public RuleCall getStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0() { return cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//from=[Class|STRING]
		public Assignment getFromAssignment_4() { return cFromAssignment_4; }
		
		//[Class|STRING]
		public CrossReference getFromClassCrossReference_4_0() { return cFromClassCrossReference_4_0; }
		
		//STRING
		public RuleCall getFromClassSTRINGTerminalRuleCall_4_0_1() { return cFromClassSTRINGTerminalRuleCall_4_0_1; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=[Class|STRING]
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//[Class|STRING]
		public CrossReference getToClassCrossReference_6_0() { return cToClassCrossReference_6_0; }
		
		//STRING
		public RuleCall getToClassSTRINGTerminalRuleCall_6_0_1() { return cToClassSTRINGTerminalRuleCall_6_0_1; }
	}
	public class DerivationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.Derivation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDerivationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cStereotypesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0 = (RuleCall)cStereotypesAssignment_2.eContents().get(0);
		private final Keyword cClassKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClassClassDerivationEndParserRuleCall_4_0 = (RuleCall)cClassAssignment_4.eContents().get(0);
		private final Keyword cRelationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPartAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPartRelationDerivationEndParserRuleCall_6_0 = (RuleCall)cPartAssignment_6.eContents().get(0);
		
		//Derivation:
		//	'derivation' name=STRING?
		//	stereotypes+=STEREOTYPE_STRING*
		//	'class' class=ClassDerivationEnd
		//	'relation' part=RelationDerivationEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//'derivation' name=STRING? stereotypes+=STEREOTYPE_STRING* 'class' class=ClassDerivationEnd 'relation'
		//part=RelationDerivationEnd
		public Group getGroup() { return cGroup; }
		
		//'derivation'
		public Keyword getDerivationKeyword_0() { return cDerivationKeyword_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//stereotypes+=STEREOTYPE_STRING*
		public Assignment getStereotypesAssignment_2() { return cStereotypesAssignment_2; }
		
		//STEREOTYPE_STRING
		public RuleCall getStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0() { return cStereotypesSTEREOTYPE_STRINGTerminalRuleCall_2_0; }
		
		//'class'
		public Keyword getClassKeyword_3() { return cClassKeyword_3; }
		
		//class=ClassDerivationEnd
		public Assignment getClassAssignment_4() { return cClassAssignment_4; }
		
		//ClassDerivationEnd
		public RuleCall getClassClassDerivationEndParserRuleCall_4_0() { return cClassClassDerivationEndParserRuleCall_4_0; }
		
		//'relation'
		public Keyword getRelationKeyword_5() { return cRelationKeyword_5; }
		
		//part=RelationDerivationEnd
		public Assignment getPartAssignment_6() { return cPartAssignment_6; }
		
		//RelationDerivationEnd
		public RuleCall getPartRelationDerivationEndParserRuleCall_6_0() { return cPartRelationDerivationEndParserRuleCall_6_0; }
	}
	public class ClassDerivationEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.ClassDerivationEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMultiplicityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_0_0 = (RuleCall)cMultiplicityAssignment_0.eContents().get(0);
		private final Assignment cEndTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEndTypeClassCrossReference_1_0 = (CrossReference)cEndTypeAssignment_1.eContents().get(0);
		private final RuleCall cEndTypeClassSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cEndTypeClassCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cConstraintsSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cConstraintsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cConstraintsSTRINGTerminalRuleCall_2_2_1_0 = (RuleCall)cConstraintsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//ClassDerivationEnd:
		//	multiplicity=Multiplicity
		//	endType=[Class|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//multiplicity=Multiplicity endType=[Class|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?
		public Group getGroup() { return cGroup; }
		
		//multiplicity=Multiplicity
		public Assignment getMultiplicityAssignment_0() { return cMultiplicityAssignment_0; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_0_0() { return cMultiplicityMultiplicityParserRuleCall_0_0; }
		
		//endType=[Class|STRING]
		public Assignment getEndTypeAssignment_1() { return cEndTypeAssignment_1; }
		
		//[Class|STRING]
		public CrossReference getEndTypeClassCrossReference_1_0() { return cEndTypeClassCrossReference_1_0; }
		
		//STRING
		public RuleCall getEndTypeClassSTRINGTerminalRuleCall_1_0_1() { return cEndTypeClassSTRINGTerminalRuleCall_1_0_1; }
		
		//('{' constraints+=STRING (',' constraints+=STRING)* '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//constraints+=STRING
		public Assignment getConstraintsAssignment_2_1() { return cConstraintsAssignment_2_1; }
		
		//STRING
		public RuleCall getConstraintsSTRINGTerminalRuleCall_2_1_0() { return cConstraintsSTRINGTerminalRuleCall_2_1_0; }
		
		//(',' constraints+=STRING)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//constraints+=STRING
		public Assignment getConstraintsAssignment_2_2_1() { return cConstraintsAssignment_2_2_1; }
		
		//STRING
		public RuleCall getConstraintsSTRINGTerminalRuleCall_2_2_1_0() { return cConstraintsSTRINGTerminalRuleCall_2_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
	}
	public class RelationDerivationEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.RelationDerivationEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMultiplicityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_0_0 = (RuleCall)cMultiplicityAssignment_0.eContents().get(0);
		private final Assignment cEndTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEndTypeAssociationCrossReference_1_0 = (CrossReference)cEndTypeAssignment_1.eContents().get(0);
		private final RuleCall cEndTypeAssociationSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cEndTypeAssociationCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cConstraintsSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cConstraintsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cConstraintsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cConstraintsSTRINGTerminalRuleCall_2_2_1_0 = (RuleCall)cConstraintsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//RelationDerivationEnd:
		//	multiplicity=Multiplicity
		//	endType=[Association|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//multiplicity=Multiplicity endType=[Association|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?
		public Group getGroup() { return cGroup; }
		
		//multiplicity=Multiplicity
		public Assignment getMultiplicityAssignment_0() { return cMultiplicityAssignment_0; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_0_0() { return cMultiplicityMultiplicityParserRuleCall_0_0; }
		
		//endType=[Association|STRING]
		public Assignment getEndTypeAssignment_1() { return cEndTypeAssignment_1; }
		
		//[Association|STRING]
		public CrossReference getEndTypeAssociationCrossReference_1_0() { return cEndTypeAssociationCrossReference_1_0; }
		
		//STRING
		public RuleCall getEndTypeAssociationSTRINGTerminalRuleCall_1_0_1() { return cEndTypeAssociationSTRINGTerminalRuleCall_1_0_1; }
		
		//('{' constraints+=STRING (',' constraints+=STRING)* '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//constraints+=STRING
		public Assignment getConstraintsAssignment_2_1() { return cConstraintsAssignment_2_1; }
		
		//STRING
		public RuleCall getConstraintsSTRINGTerminalRuleCall_2_1_0() { return cConstraintsSTRINGTerminalRuleCall_2_1_0; }
		
		//(',' constraints+=STRING)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//constraints+=STRING
		public Assignment getConstraintsAssignment_2_2_1() { return cConstraintsAssignment_2_2_1; }
		
		//STRING
		public RuleCall getConstraintsSTRINGTerminalRuleCall_2_2_1_0() { return cConstraintsSTRINGTerminalRuleCall_2_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
	}
	public class GeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.GeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGensetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cIsDisjointAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIsDisjointDisjointKeyword_1_0_0 = (Keyword)cIsDisjointAssignment_1_0.eContents().get(0);
		private final Assignment cIsCompleteAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIsCompleteCompleteKeyword_1_1_0 = (Keyword)cIsCompleteAssignment_1_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cGeneralizationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGeneralizationsGeneralizationParserRuleCall_3_0 = (RuleCall)cGeneralizationsAssignment_3.eContents().get(0);
		
		//GeneralizationSet:
		//	'genset' (isDisjoint?='disjoint'? & isComplete?='complete'?) name=STRING?
		//	generalizations+=Generalization+;
		@Override public ParserRule getRule() { return rule; }
		
		//'genset' (isDisjoint?='disjoint'? & isComplete?='complete'?) name=STRING? generalizations+=Generalization+
		public Group getGroup() { return cGroup; }
		
		//'genset'
		public Keyword getGensetKeyword_0() { return cGensetKeyword_0; }
		
		//isDisjoint?='disjoint'? & isComplete?='complete'?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//isDisjoint?='disjoint'?
		public Assignment getIsDisjointAssignment_1_0() { return cIsDisjointAssignment_1_0; }
		
		//'disjoint'
		public Keyword getIsDisjointDisjointKeyword_1_0_0() { return cIsDisjointDisjointKeyword_1_0_0; }
		
		//isComplete?='complete'?
		public Assignment getIsCompleteAssignment_1_1() { return cIsCompleteAssignment_1_1; }
		
		//'complete'
		public Keyword getIsCompleteCompleteKeyword_1_1_0() { return cIsCompleteCompleteKeyword_1_1_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//generalizations+=Generalization+
		public Assignment getGeneralizationsAssignment_3() { return cGeneralizationsAssignment_3; }
		
		//Generalization
		public RuleCall getGeneralizationsGeneralizationParserRuleCall_3_0() { return cGeneralizationsGeneralizationParserRuleCall_3_0; }
	}
	
	public class AggregationKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.AggregationKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoneNoneKeyword_0_0 = (Keyword)cNoneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSharedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSharedSharedKeyword_1_0 = (Keyword)cSharedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCompositeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCompositeCompositeKeyword_2_0 = (Keyword)cCompositeEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AggregationKind:
		//	none | shared | composite;
		public EnumRule getRule() { return rule; }
		
		//none | shared | composite
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//none
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_0() { return cNoneEnumLiteralDeclaration_0; }
		
		//"none"
		public Keyword getNoneNoneKeyword_0_0() { return cNoneNoneKeyword_0_0; }
		
		//shared
		public EnumLiteralDeclaration getSharedEnumLiteralDeclaration_1() { return cSharedEnumLiteralDeclaration_1; }
		
		//"shared"
		public Keyword getSharedSharedKeyword_1_0() { return cSharedSharedKeyword_1_0; }
		
		//composite
		public EnumLiteralDeclaration getCompositeEnumLiteralDeclaration_2() { return cCompositeEnumLiteralDeclaration_2; }
		
		//"composite"
		public Keyword getCompositeCompositeKeyword_2_0() { return cCompositeCompositeKeyword_2_0; }
	}
	public class AggregationKindDeclarationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.AggregationKindDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSharedEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSharedSharedKeyword_0_0 = (Keyword)cSharedEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCompositeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCompositeCompositeKeyword_1_0 = (Keyword)cCompositeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AggregationKindDeclaration returns AggregationKind:
		//	shared | composite;
		public EnumRule getRule() { return rule; }
		
		//shared | composite
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//shared
		public EnumLiteralDeclaration getSharedEnumLiteralDeclaration_0() { return cSharedEnumLiteralDeclaration_0; }
		
		//"shared"
		public Keyword getSharedSharedKeyword_0_0() { return cSharedSharedKeyword_0_0; }
		
		//composite
		public EnumLiteralDeclaration getCompositeEnumLiteralDeclaration_1() { return cCompositeEnumLiteralDeclaration_1; }
		
		//"composite"
		public Keyword getCompositeCompositeKeyword_1_0() { return cCompositeCompositeKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final ModelElementElements pModelElement;
	private final ClassElements pClass;
	private final AttributeElements pAttribute;
	private final RelationshipElements pRelationship;
	private final AssociationElements pAssociation;
	private final BinaryAssociationElements pBinaryAssociation;
	private final NaryAssociationElements pNaryAssociation;
	private final AssociationEndElements pAssociationEnd;
	private final AggregationKindElements eAggregationKind;
	private final AggregationKindDeclarationElements eAggregationKindDeclaration;
	private final MultiplicityElements pMultiplicity;
	private final CARDINALITYElements pCARDINALITY;
	private final GeneralizationElements pGeneralization;
	private final DependencyLinkElements pDependencyLink;
	private final DerivationElements pDerivation;
	private final ClassDerivationEndElements pClassDerivationEnd;
	private final RelationDerivationEndElements pRelationDerivationEnd;
	private final GeneralizationSetElements pGeneralizationSet;
	private final TerminalRule tSTEREOTYPE_STRING;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OntoUMLArchiveGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pModelElement = new ModelElementElements();
		this.pClass = new ClassElements();
		this.pAttribute = new AttributeElements();
		this.pRelationship = new RelationshipElements();
		this.pAssociation = new AssociationElements();
		this.pBinaryAssociation = new BinaryAssociationElements();
		this.pNaryAssociation = new NaryAssociationElements();
		this.pAssociationEnd = new AssociationEndElements();
		this.eAggregationKind = new AggregationKindElements();
		this.eAggregationKindDeclaration = new AggregationKindDeclarationElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pCARDINALITY = new CARDINALITYElements();
		this.pGeneralization = new GeneralizationElements();
		this.pDependencyLink = new DependencyLinkElements();
		this.pDerivation = new DerivationElements();
		this.pClassDerivationEnd = new ClassDerivationEndElements();
		this.pRelationDerivationEnd = new RelationDerivationEndElements();
		this.pGeneralizationSet = new GeneralizationSetElements();
		this.tSTEREOTYPE_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "it.unibz.inf.ontouml.archive.OntoUMLArchive.STEREOTYPE_STRING");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("it.unibz.inf.ontouml.archive.OntoUMLArchive".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	elements+=ModelElement*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//ModelElement:
	//	(Class | Relationship | GeneralizationSet) ';';
	public ModelElementElements getModelElementAccess() {
		return pModelElement;
	}
	
	public ParserRule getModelElementRule() {
		return getModelElementAccess().getRule();
	}
	
	//Class:
	//	isAbstract?='abstract'? 'class' name=STRING
	//	stereotypes+=STEREOTYPE_STRING*
	//	attributes+=Attribute*;
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//Attribute:
	//	'att' name=STRING multiplicity=Multiplicity ':' attType=[Class|STRING];
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Relationship:
	//	Association | Generalization | DependencyLink | Derivation;
	public RelationshipElements getRelationshipAccess() {
		return pRelationship;
	}
	
	public ParserRule getRelationshipRule() {
		return getRelationshipAccess().getRule();
	}
	
	//Association:
	//	BinaryAssociation | NaryAssociation;
	public AssociationElements getAssociationAccess() {
		return pAssociation;
	}
	
	public ParserRule getAssociationRule() {
		return getAssociationAccess().getRule();
	}
	
	////BinaryAssociation:
	////	RegularAssociation | ParthoodAssociation
	////;
	//BinaryAssociation:
	//	'association' name=STRING?
	//	stereotypes+=STEREOTYPE_STRING*
	//	'from' from=AssociationEnd
	//	'to' to=AssociationEnd;
	public BinaryAssociationElements getBinaryAssociationAccess() {
		return pBinaryAssociation;
	}
	
	public ParserRule getBinaryAssociationRule() {
		return getBinaryAssociationAccess().getRule();
	}
	
	////
	////ParthoodAssociation:
	////	'association' name=STRING?
	////	stereotypes+=STEREOTYPE_STRING*
	////	'whole' whole=AssociationEnd
	////	'part' part=AssociationEnd
	////;
	//NaryAssociation:
	//	'association' name=STRING?
	//	stereotypes+=STEREOTYPE_STRING* ('end' ends+=AssociationEnd) ('end' ends+=AssociationEnd) ('end'
	//	ends+=AssociationEnd)+;
	public NaryAssociationElements getNaryAssociationAccess() {
		return pNaryAssociation;
	}
	
	public ParserRule getNaryAssociationRule() {
		return getNaryAssociationAccess().getRule();
	}
	
	//AssociationEnd:
	//	aggregationKind=AggregationKindDeclaration?
	//	name=STRING?
	//	multiplicity=Multiplicity
	//	':' endType=[Class|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?;
	public AssociationEndElements getAssociationEndAccess() {
		return pAssociationEnd;
	}
	
	public ParserRule getAssociationEndRule() {
		return getAssociationEndAccess().getRule();
	}
	
	//enum AggregationKind:
	//	none | shared | composite;
	public AggregationKindElements getAggregationKindAccess() {
		return eAggregationKind;
	}
	
	public EnumRule getAggregationKindRule() {
		return getAggregationKindAccess().getRule();
	}
	
	//enum AggregationKindDeclaration returns AggregationKind:
	//	shared | composite;
	public AggregationKindDeclarationElements getAggregationKindDeclarationAccess() {
		return eAggregationKindDeclaration;
	}
	
	public EnumRule getAggregationKindDeclarationRule() {
		return getAggregationKindDeclarationAccess().getRule();
	}
	
	//Multiplicity:
	//	'[' lower=CARDINALITY '..' upper=CARDINALITY ']';
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//CARDINALITY ecore::EInt:
	//	'*' | INT;
	public CARDINALITYElements getCARDINALITYAccess() {
		return pCARDINALITY;
	}
	
	public ParserRule getCARDINALITYRule() {
		return getCARDINALITYAccess().getRule();
	}
	
	//Generalization:
	//	'gen' name=STRING?
	//	'super' super=[Class|STRING]
	//	'sub' sub=[Class|STRING];
	public GeneralizationElements getGeneralizationAccess() {
		return pGeneralization;
	}
	
	public ParserRule getGeneralizationRule() {
		return getGeneralizationAccess().getRule();
	}
	
	//DependencyLink:
	//	'dependency' name=STRING?
	//	stereotypes+=STEREOTYPE_STRING*
	//	'from' from=[Class|STRING]
	//	'to' to=[Class|STRING];
	public DependencyLinkElements getDependencyLinkAccess() {
		return pDependencyLink;
	}
	
	public ParserRule getDependencyLinkRule() {
		return getDependencyLinkAccess().getRule();
	}
	
	//Derivation:
	//	'derivation' name=STRING?
	//	stereotypes+=STEREOTYPE_STRING*
	//	'class' class=ClassDerivationEnd
	//	'relation' part=RelationDerivationEnd;
	public DerivationElements getDerivationAccess() {
		return pDerivation;
	}
	
	public ParserRule getDerivationRule() {
		return getDerivationAccess().getRule();
	}
	
	//ClassDerivationEnd:
	//	multiplicity=Multiplicity
	//	endType=[Class|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?;
	public ClassDerivationEndElements getClassDerivationEndAccess() {
		return pClassDerivationEnd;
	}
	
	public ParserRule getClassDerivationEndRule() {
		return getClassDerivationEndAccess().getRule();
	}
	
	//RelationDerivationEnd:
	//	multiplicity=Multiplicity
	//	endType=[Association|STRING] ('{' constraints+=STRING (',' constraints+=STRING)* '}')?;
	public RelationDerivationEndElements getRelationDerivationEndAccess() {
		return pRelationDerivationEnd;
	}
	
	public ParserRule getRelationDerivationEndRule() {
		return getRelationDerivationEndAccess().getRule();
	}
	
	//GeneralizationSet:
	//	'genset' (isDisjoint?='disjoint'? & isComplete?='complete'?) name=STRING?
	//	generalizations+=Generalization+;
	public GeneralizationSetElements getGeneralizationSetAccess() {
		return pGeneralizationSet;
	}
	
	public ParserRule getGeneralizationSetRule() {
		return getGeneralizationSetAccess().getRule();
	}
	
	//terminal STEREOTYPE_STRING:
	//	"<<" ('a'..'z' | 'A'..'Z' | ' ') ('a'..'z' | 'A'..'Z' | ' ')* ">>";
	public TerminalRule getSTEREOTYPE_STRINGRule() {
		return tSTEREOTYPE_STRING;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
