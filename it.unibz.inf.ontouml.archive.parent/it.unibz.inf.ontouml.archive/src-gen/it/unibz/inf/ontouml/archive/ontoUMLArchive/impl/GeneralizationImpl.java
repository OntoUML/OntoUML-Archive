/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.ontouml.archive.ontoUMLArchive.impl;

import it.unibz.inf.ontouml.archive.ontoUMLArchive.Generalization;
import it.unibz.inf.ontouml.archive.ontoUMLArchive.OntoUMLArchivePackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Generalization</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibz.inf.ontouml.archive.ontoUMLArchive.impl.GeneralizationImpl#getSuper <em>Super</em>}</li>
 *   <li>{@link it.unibz.inf.ontouml.archive.ontoUMLArchive.impl.GeneralizationImpl#getSub <em>Sub</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GeneralizationImpl extends RelationshipImpl implements Generalization
{
  /**
   * The cached value of the '{@link #getSuper() <em>Super</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuper()
   * @generated
   * @ordered
   */
  protected it.unibz.inf.ontouml.archive.ontoUMLArchive.Class super_;

  /**
   * The cached value of the '{@link #getSub() <em>Sub</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSub()
   * @generated
   * @ordered
   */
  protected it.unibz.inf.ontouml.archive.ontoUMLArchive.Class sub;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GeneralizationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OntoUMLArchivePackage.Literals.GENERALIZATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public it.unibz.inf.ontouml.archive.ontoUMLArchive.Class getSuper()
  {
    if (super_ != null && super_.eIsProxy())
    {
      InternalEObject oldSuper = (InternalEObject)super_;
      super_ = (it.unibz.inf.ontouml.archive.ontoUMLArchive.Class)eResolveProxy(oldSuper);
      if (super_ != oldSuper)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, OntoUMLArchivePackage.GENERALIZATION__SUPER, oldSuper, super_));
      }
    }
    return super_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public it.unibz.inf.ontouml.archive.ontoUMLArchive.Class basicGetSuper()
  {
    return super_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSuper(it.unibz.inf.ontouml.archive.ontoUMLArchive.Class newSuper)
  {
    it.unibz.inf.ontouml.archive.ontoUMLArchive.Class oldSuper = super_;
    super_ = newSuper;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OntoUMLArchivePackage.GENERALIZATION__SUPER, oldSuper, super_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public it.unibz.inf.ontouml.archive.ontoUMLArchive.Class getSub()
  {
    if (sub != null && sub.eIsProxy())
    {
      InternalEObject oldSub = (InternalEObject)sub;
      sub = (it.unibz.inf.ontouml.archive.ontoUMLArchive.Class)eResolveProxy(oldSub);
      if (sub != oldSub)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, OntoUMLArchivePackage.GENERALIZATION__SUB, oldSub, sub));
      }
    }
    return sub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public it.unibz.inf.ontouml.archive.ontoUMLArchive.Class basicGetSub()
  {
    return sub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSub(it.unibz.inf.ontouml.archive.ontoUMLArchive.Class newSub)
  {
    it.unibz.inf.ontouml.archive.ontoUMLArchive.Class oldSub = sub;
    sub = newSub;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OntoUMLArchivePackage.GENERALIZATION__SUB, oldSub, sub));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OntoUMLArchivePackage.GENERALIZATION__SUPER:
        if (resolve) return getSuper();
        return basicGetSuper();
      case OntoUMLArchivePackage.GENERALIZATION__SUB:
        if (resolve) return getSub();
        return basicGetSub();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OntoUMLArchivePackage.GENERALIZATION__SUPER:
        setSuper((it.unibz.inf.ontouml.archive.ontoUMLArchive.Class)newValue);
        return;
      case OntoUMLArchivePackage.GENERALIZATION__SUB:
        setSub((it.unibz.inf.ontouml.archive.ontoUMLArchive.Class)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OntoUMLArchivePackage.GENERALIZATION__SUPER:
        setSuper((it.unibz.inf.ontouml.archive.ontoUMLArchive.Class)null);
        return;
      case OntoUMLArchivePackage.GENERALIZATION__SUB:
        setSub((it.unibz.inf.ontouml.archive.ontoUMLArchive.Class)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OntoUMLArchivePackage.GENERALIZATION__SUPER:
        return super_ != null;
      case OntoUMLArchivePackage.GENERALIZATION__SUB:
        return sub != null;
    }
    return super.eIsSet(featureID);
  }

} //GeneralizationImpl
